import h5py
import numpy as np
import datetime
import matplotlib.pyplot as plt

burndates= {
'130': '20210701',
'2854': '20210607',
'269': '20210617',
'190': '20210706',
'214': '20210630'}

preposttlsdates= {
    '130' : ['20210618','20210904'],
    '2854' : ['20210604','20210628'],
    '269' : ['20210614','20210903'],
    '190' : ['20210608','20210907'],
    '214': ['20210611', '20210906']
}

preposts2dates = {
'130': ['20210629','20210702'],
'2854': ['20210604','20210611'],
'269': ['20210611','20210619'],
'190': ['20210703','20210716'],
'214': ['20210629','20210704']
}

names = {
    '130': 'Seitseminen',
    '2854': 'Nuuksio',
    '269':'Liesjarvi',
    '190':'Kivimaensalo/Ahveninen',
    '214': 'Pyha-Hakki'
}

def get_closest(burndates, keydatedict):
    for id in burndates.keys():
        datestring = burndates[id]
        date = datetime.datetime.strptime(datestring,"%Y%m%d").date()
        avdates = keydatedict[id]
        print(avdates)
        precurdelta = 100
        postcurdelta = -100
        for avdate in avdates:
            avdate = datetime.datetime.strptime(avdate,"%Y%m%d").date()
            print(avdate)
            delta = date - avdate
            deltadays = delta.days
            # if pre burndate
            if deltadays > 0:
                if deltadays < precurdelta:
                    precurdelta = deltadays
                    predate = avdate
            elif deltadays < 0:
                if deltadays > postcurdelta:
                    postcurdelta = deltadays
                    postdate = avdate

        print(id)
        print('pre')
        print(precurdelta)
        print(predate)
        print('post')
        print(postcurdelta)
        print(postdate)



with h5py.File('burnt_area_clipped_nd_fixed.h5', 'r') as hdf:
    for a in hdf:
        #print(a)
        #print(hdf[a].keys())
        pre = hdf[a][preposts2dates[a][0]]
        post = hdf[a][preposts2dates[a][1]]

        print(a)
        print(preposts2dates[a])
        print(pre.size)
        print(post.size)

        dnbr = np.subtract(pre,post)
        plt.imshow(dnbr)
        plt.colorbar()
        plt.clim(0, 0.6) 
        plt.title(names[a] + ' - '+ a)
        plt.savefig('dnbr_id_'+ a+ '.png')
        plt.show()
        plt.clf()

        rdnbr = np.divide(dnbr,np.sqrt(np.abs(pre)))
        plt.imshow(rdnbr)
        plt.colorbar()
        plt.clim(0, 0.6) 
        plt.title(names[a] + ' - '+ a)
        plt.savefig('rdnbr_id_'+ a+ '.png')
        plt.show()
        plt.clf()



"""
iddatedict = {}
with h5py.File('burnt_area_clipped_nd.h5', 'r') as hdf:
    print(list(hdf.keys()))
    for a in hdf:
        print(a)
        rp = hdf[a]

        oneidmedians = {}
        oneidnotallpixels = {}
        preburn = []
        postburn = []
        if not a in iddatedict.keys():
            iddatedict[a] = []

        for key in rp.keys():
            #print(list(hdf[a].get(key)))
            print(key)
            

            
            #print(rp[key].shape)
            #print(rp.get(key))
            #real values are between -1 and 1
            df = rp[key][()]

            # use only dates without any clouds
            if np.count_nonzero(df[df==99999]) == 0:
                if not key in iddatedict[a]:
                    iddatedict[a].append(key)
                #set cloud and outside values to nan 
                df[(df < -1) | (df > 1)] = np.nan
                median= np.nanmedian(df)
                std = np.nanstd(df)

print(iddatedict)

get_closest(burndates,iddatedict)
"""
# with all
#iddatedict = {'130': ['20210512', '20210513', '20210515', '20210518', '20210520', '20210523', '20210527', '20210528', '20210530', '20210601', '20210602', '20210604', '20210606', '20210607', '20210609', '20210611', '20210617', '20210621', '20210627', '20210629', '20210701', '20210702', '20210704', '20210707', '20210712', '20210714', '20210716', '20210717', '20210719', '20210721', '20210722', '20210724', '20210726', '20210727', '20210731', '20210801', '20210806', '20210810', '20210811', '20210813', '20210816', '20210818', '20210820', '20210821', '20210828', '20210831', '20210902', '20210904', '20210909', '20210910', '20210919', '20210927', '20211014', '20211017', '20211019', '20211029'], '190': ['20210512', '20210517', '20210519', '20210527', '20210529', '20210601', '20210603', '20210606', '20210608', '20210611', '20210613', '20210623', '20210626', '20210628', '20210703', '20210706', '20210711', '20210713', '20210716', '20210718', '20210726', '20210731', '20210802', '20210805', '20210807', '20210810', '20210815', '20210901', '20210906', '20211004', '20211011', '20211014', '20211019', '20211024', '20211029'], '214': ['20210512', '20210515', '20210525', '20210530', '20210601', '20210604', '20210606', '20210609', '20210611', '20210619', '20210626', '20210629', '20210704', '20210714', '20210716', '20210721', '20210726', '20210810', '20210813', '20210815', '20210820', '20210828', '20210917', '20210927', '20211002', '20211012', '20211017', '20211019', '20211029'], '269': ['20210115', '20210204', '20210206', '20210209', '20210211', '20210214', '20210308', '20210318', '20210326', '20210331', '20210412', '20210415', '20210417', '20210420', '20210430', '20210512', '20210520', '20210522', '20210527', '20210530', '20210604', '20210606', '20210611', '20210619', '20210621', '20210626', '20210629', '20210701', '20210704', '20210711', '20210714', '20210716', '20210719', '20210724', '20210726', '20210729', '20210731', '20210805', '20210808', '20210810', '20210813', '20210818', '20210825', '20210902', '20210904', '20210917', '20210919', '20210927', '20211012', '20211014', '20211017', '20211019', '20211029'], '2854': ['20210512', '20210522', '20210524', '20210529', '20210530', '20210604', '20210608', '20210611', '20210616', '20210618', '20210619', '20210621', '20210701', '20210703', '20210704', '20210711', '20210714', '20210716', '20210718', '20210721', '20210723', '20210726', '20210728', '20210729', '20210731', '20210805', '20210808', '20210810', '20210813', '20210815', '20210901', '20210902', '20210904', '20210916', '20210921', '20210922', '20210926', '20210927', '20211002', '20211006', '20211007', '20211012', '20211014', '20211017', '20211019', '20211024', '20211029']}
# only fully non cloudy dates
#iddatedict = {'130': ['20210512', '20210513', '20210518', '20210520', '20210523', '20210528', '20210530', '20210601', '20210602', '20210604', '20210606', '20210607', '20210609', '20210611', '20210617', '20210621', '20210627', '20210629', '20210701', '20210702', '20210704', '20210707', '20210712', '20210714', '20210716', '20210717', '20210726', '20210806', '20210810', '20210813', '20210821', '20210909', '20210927', '20211014', '20211019'], '190': ['20210512', '20210517', '20210519', '20210601', '20210606', '20210608', '20210611', '20210613', '20210623', '20210626', '20210703', '20210706', '20210716', '20210726', '20210802', '20210807', '20210815', '20210906', '20211004', '20211019', '20211024'], '214': ['20210512', '20210525', '20210530', '20210604', '20210606', '20210609', '20210611', '20210619', '20210626', '20210629', '20210704', '20210714', '20210716', '20210726', '20210813', '20210828', '20210927', '20211019', '20211029'], '269': ['20210204', '20210206', '20210209', '20210211', '20210214', '20210326', '20210331', '20210412', '20210415', '20210417', '20210430', '20210512', '20210527', '20210530', '20210606', '20210611', '20210619', '20210621', '20210626', '20210701', '20210704', '20210714', '20210716', '20210724', '20210726', '20210810', '20210813', '20210902', '20210927', '20211017', '20211019'], '2854': ['20210512', '20210524', '20210529', '20210530', '20210604', '20210611', '20210616', '20210618', '20210619', '20210621', '20210701', '20210703', '20210704', '20210711', '20210714', '20210716', '20210718', '20210721', '20210726', '20210731', '20210808', '20210810', '20210813', '20210902', '20210904', '20210916', '20210926', '20211006', '20211024']}
"""
130
pre
10
2021-06-21
post
-2
2021-07-03
2854
pre
3
2021-06-04
post
-4
2021-06-11
269
pre
1
2021-06-16
post
-1
2021-06-18
190
pre
2
2021-07-04
post
-5
2021-07-11
214
pre
9
2021-06-21
post
-1
2021-07-01
"""
